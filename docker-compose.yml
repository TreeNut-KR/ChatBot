services:
  nginx:
    restart: always
    build:
      context: ./nginx
    ports:
      - "80:80"
    depends_on:
      - fastapi

  fastapi:
    restart: always
    build:
      context: ./fastapi
    ports:
      - "8000:8000"
    environment:
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_ADMIN_USER: ${MONGO_ADMIN_USER}
      MONGO_ADMIN_PASSWORD: ${MONGO_ADMIN_PASSWORD}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_AUTH: ${MONGO_AUTH}
    volumes:
      - ./fastapi/logs:/app/logs
      - ./fastapi/sources:/app/sources
    depends_on:
      - mysql

  mysql:
    restart: unless-stopped
    build:
      context: ./mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/log.cnf:/etc/mysql/conf.d/log.cnf:ro
      - ./mysql/logs:/var/log/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  mongodb:
    restart: unless-stopped
    build:
      context: ./mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWORD}
      MONGO_DATABASE: ${MONGO_DATABASE}
    volumes:
      - ./mongo/data:/data/db
      - ./mongo/log:/var/log/mongodb
      - ./mongo/.env:/docker-entrypoint-initdb.d/.env
